/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MessageGeneratorImport } from './routes/message-generator'
import { Route as IndexImport } from './routes/index'
import { Route as CampaignsNewImport } from './routes/campaigns.new'
import { Route as CampaignsIdImport } from './routes/campaigns.$id'

// Create/Update Routes

const MessageGeneratorRoute = MessageGeneratorImport.update({
  id: '/message-generator',
  path: '/message-generator',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CampaignsNewRoute = CampaignsNewImport.update({
  id: '/campaigns/new',
  path: '/campaigns/new',
  getParentRoute: () => rootRoute,
} as any)

const CampaignsIdRoute = CampaignsIdImport.update({
  id: '/campaigns/$id',
  path: '/campaigns/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/message-generator': {
      id: '/message-generator'
      path: '/message-generator'
      fullPath: '/message-generator'
      preLoaderRoute: typeof MessageGeneratorImport
      parentRoute: typeof rootRoute
    }
    '/campaigns/$id': {
      id: '/campaigns/$id'
      path: '/campaigns/$id'
      fullPath: '/campaigns/$id'
      preLoaderRoute: typeof CampaignsIdImport
      parentRoute: typeof rootRoute
    }
    '/campaigns/new': {
      id: '/campaigns/new'
      path: '/campaigns/new'
      fullPath: '/campaigns/new'
      preLoaderRoute: typeof CampaignsNewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/message-generator': typeof MessageGeneratorRoute
  '/campaigns/$id': typeof CampaignsIdRoute
  '/campaigns/new': typeof CampaignsNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/message-generator': typeof MessageGeneratorRoute
  '/campaigns/$id': typeof CampaignsIdRoute
  '/campaigns/new': typeof CampaignsNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/message-generator': typeof MessageGeneratorRoute
  '/campaigns/$id': typeof CampaignsIdRoute
  '/campaigns/new': typeof CampaignsNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/message-generator' | '/campaigns/$id' | '/campaigns/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/message-generator' | '/campaigns/$id' | '/campaigns/new'
  id:
    | '__root__'
    | '/'
    | '/message-generator'
    | '/campaigns/$id'
    | '/campaigns/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MessageGeneratorRoute: typeof MessageGeneratorRoute
  CampaignsIdRoute: typeof CampaignsIdRoute
  CampaignsNewRoute: typeof CampaignsNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MessageGeneratorRoute: MessageGeneratorRoute,
  CampaignsIdRoute: CampaignsIdRoute,
  CampaignsNewRoute: CampaignsNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/message-generator",
        "/campaigns/$id",
        "/campaigns/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/message-generator": {
      "filePath": "message-generator.tsx"
    },
    "/campaigns/$id": {
      "filePath": "campaigns.$id.tsx"
    },
    "/campaigns/new": {
      "filePath": "campaigns.new.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
